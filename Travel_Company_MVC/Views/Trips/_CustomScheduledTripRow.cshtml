@using System.Globalization
@model CustomScheduledTripViewModel;






<tr>


    <td>

        <div class="m-0 d-flex">


            <i class="ki-duotone fw-semibold  ki-black-up   fs-1 mt-1 ">  </i>

            <div>

                <div class="">

                    <span class="text-gray-900 fw-bold d-block fs-3">
                        @DateTime.Today.Add(Model.Time).ToString("HH:mm")
                        <span class="text-muted fw-semibold fs-7">
                            @(Model.Time > new TimeSpan(12, 0, 0) ? "Pm" : "Am")
                        </span>
                        <span class="text-primary fw-normal  fs-6  ">@Model.Date.ToString("ddd")</span>
                    </span>



                </div>

                <div class="text-muted fw-semibold fs-7 ">
                    <span class="text-primary fs-5">
                        @Model.Date.ToString("dd")
                    </span>
                    @Model.Date.ToString("MMM")
                    @Model.Date.ToString("yyyy").
                </div>
            </div>



        </div>



    </td>
    <td>
        <div>

            <div class="d-flex gap-2">

                <span class="text-gray-900 fw-bold d-block ">
                    @Model.RouteName

                </span>



            </div>

            <div class="text-muted fw-semibold fs-7 ">
                <span class="text-primary">
                    350
                </span>
                km.
            </div>
        </div>
    </td>
    <td>



        <div class="d-flex mb-2">

            @{
                string color = "";
                if (Model.Status == TripStatus.Unassigned)
                    color = "badge-light";
                else if (Model.Status == TripStatus.Pending)
                    color = "badge-light-warning";
                else if (Model.Status == TripStatus.Active)
                    color = "badge-light-primary";
                else if (Model.Status == TripStatus.Canseled)
                    color = "badge-light-danger";
                else if (Model.Status == TripStatus.Complete)
                    color = "badge-light-success";

            }
            <div class=" badge    @color ">@Model.Status</div>


        </div>
        <!--end::Item-->

    </td>
    <td>
    
        @if (Model.MainTripId is not null)
        {
            <span class="badge badge-light-danger">Return Trip</span>

        }
        else
        {
            <span class="badge badge-light">Main Trip</span>

        }
    </td>

    <td>

        <div class="d-flex justify-content-start flex-shrink-0">

			
            <a class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1"
               onclick="EditInAnotherPage(this,'@Url.Action("EditTripPage","Trips", new { tripId = Model.TripId, isReturnTrip = Model.MainTripId != null })')" target="_blank">
              
                <i class="ki-duotone ki-pencil fs-2">
                    <span class="path1"></span>
                    <span class="path2"></span>
                </i>
            </a>
            <a class="btn btn-icon btn-bg-light btn-active-color-danger btn-sm">
                <i class="ki-duotone ki-trash fs-2">
                    <span class="path1"></span>
                    <span class="path2"></span>
                    <span class="path3"></span>
                    <span class="path4"></span>
                    <span class="path5"></span>
                </i>
            </a>
        </div>

    </td>


</tr>


