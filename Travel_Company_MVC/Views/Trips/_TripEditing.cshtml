@using System.Globalization
@using Newtonsoft.Json
@model EditScheduledTripViewModle;



<div class="border-gray-300 border-start    child-slide pt-7  animate__animated  animate__fadeIn animate__slower">
	<div class="d-flex justify-content-center">
		<div>
			
	

			<form class="js-ajax-form" method="post"
				  data-url="/Trips/EditTrip"
				  data-confirm-message="true"
				  data-title="Edit Trip"
				  data-message="Are you sure you want to Edit the trip?"
				  success-message="Trips Edited Successfully"
				  data-callback="UpdateTableRow">





				@{
					var jsonData="";

					if(Model.VehicleId is not null)
					{
						var data = new VehicleDetailsViewModel();


						data.VehicleId = Model.VehicleId.Value;
						data.TripId = Model.TripId;

						// if (int.TryParse(TempData["TripId"]?.ToString(), out var tripId))
						// {
						// 	data.TripId = tripId;
						// }

					    jsonData = JsonConvert.SerializeObject(data);
					}

				


				}

				<input type="hidden" asp-for="@Model.VehicleId" id="vehicle-id" value="@Model.VehicleId"
					   data-url="/Vehicles/GetVehicleDetails"
					   data-json-data="@jsonData" />


				<input type="hidden" asp-for="@Model.TripId" value="@Model.TripId" />
				<input type="hidden" asp-for="@Model.ReturnTripId" value="@Model.ReturnTripId" />
				<input type="hidden" asp-for="@Model.MainTripOldDateTime" value="@Model.MainTripOldDateTime" />
				<input type="hidden" asp-for="@Model.ReturnTripOldDateTime" value="@Model.ReturnTripOldDateTime" />
				<input type="hidden" asp-for="@Model.MainTripHasBookedSeats" value="@Model.MainTripHasBookedSeats" />
				<input type="hidden" asp-for="@Model.ReturnTripHasBookedSeats" value="@Model.ReturnTripHasBookedSeats" />

				<input type="hidden" asp-for="@Model.RouteId" id="main-route-id" value="@Model.RouteId" />
				
				<input type="hidden" asp-for="@Model.RouteId" id="trrip-id" value="@Model.TripId" />
				<input type="hidden" asp-for="@Model.ReturnRouteId" id="return-route-id" value="@Model.ReturnRouteId" />
				




				<div id="vehicle-details">
						<div class="d-flex">

						<div class="border border-dashed border-hover-primary rounded ms-4 p-4">
							<div class="d-flex">
								<span class="text-gray-900 fw-bold fs-5 ">Vehicle</span>
								<span class="bullet   bullet-dot  bg-gray-500 ms-2 mt-3"></span>

							</div>

							<div class="d-flex gap-10">
								<span class="text-muted fw-semibold mt-3">No Vehicle Assigned Yet</span>

								<a class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1 js-render-modal"
								   data-url="/Vehicles/GetAvailableVehicles?tripId=@Model.TripId"
								   data-large-modal="true"
								   data-title="Availavle Vehicles"
								   data-sub-title="all vehicles existed in the station at trip time."
								   data-updete="true"
								   data-table-id="Scheduled_Trips_Table">
									<i class="ki-duotone ki-pencil fs-2">
										<span class="path1"></span>
										<span class="path2"></span>
									</i>
								</a>

							</div>

						

						</div>


				</div>
						
					
				
				
				</div>

				<div class="separator separator-dashed border-muted mb-5 mt-10 mx-20"></div>
				<div class="d-flex gap-10 flex-wrap mt-10 ">

					<!-- --MainTrip start -->
					@{
						var tripDuration = TimeSpan.FromMinutes(Model.TripTimeSpanInMInits);
					}

					<div class="ms-5">
						<div class="d-flex">
							<span class="text-gray-900 fw-bold ms-4 fs-5">Main Trip</span>
							<span class="bullet   bullet-dot  bg-success ms-2 mt-3"></span>
							<span class="badge badge-light ms-3 fw-bold b-block">@($"{(int)tripDuration.TotalHours}:{(int)tripDuration.Minutes}") hour</span>

						</div>



						<div class="d-flex align-items-center justify-content-center m-4">

							<label asp-for="MainTripNewTime" class="form-label me-2" style="white-space: nowrap;">Time :</label>
							<input asp-for="MainTripNewTime" class="form-control form-control-solid form-control-sm flatpickr-input flatpicker-time"
							value="@Model.MainTripOldDateTime.TimeOfDay" placeholder="Pick time" id="trip-time" type="text">
							<span asp-validation-for="MainTripNewTime" class="text-danger d-block"></span>

						</div>
						<div class="d-flex align-items-center justify-content-center m-4">

							<label asp-for="MainTripNewDate" class="form-label me-2" style="white-space: nowrap;">Date :</label>
							<input asp-for="MainTripNewDate" class="form-control form-control-solid form-control-sm flatpickr-input flatpicker-date" 
							value="@Model.MainTripOldDateTime.ToString(" yyyy-MM-dd")" placeholder="Pick Date" id="trip-time" type="text">
							<span asp-validation-for="MainTripNewDate" class="text-danger d-block"></span>

						</div>



						<!--begin::Station Stop Duration-->
						<div class="d-flex align-items-center m-4 mt-7 ">


							<span class="text-gray-800 fs-5 fw-normal  mb-1 ">Station Stop Duration :</span>



							
							<input id="main-trip-stop-munites-hidden-input" type="hidden" asp-for="MainTripStationStopMinutes"
								   value="@Model.MainTripStationStopMinutes" />
							@*<input type="hidden" asp-for="BreakMinutes" id="Hidden_Break_Minutes" /> *@


							<div class="m-4 mt-0 d-flex">
								<!--begin::Dialer-->
								<div id="" class="input-group w-md-200px "
									 data-kt-dialer="true"
									 data-kt-dialer-max="20"
									 data-kt-dialer-min="5"
									 data-kt-dialer-suffix=" Minutes"
									 data-kt-dialer-step="5">

								<!--begin::Decrease control-->
								<button class="btn btn-icon btn-outline btn-active-color-primary" type="button" data-kt-dialer-control="decrease" >
									<i class="ki-duotone ki-minus fs-2"></i>
								</button>
								<!--end::Decrease control-->
								<!--begin::Input control-->

									<input asp-for="MainTripStationStopMinutes" id="main-trip-stop-munites" type="text" class="form-control dialer-input" placeholder="Minutes"
										   value="@(Model.MainTripStationStopMinutes)" data-kt-dialer-control="input" />
								<!--end::Input control-->
								<!--begin::Increase control-->
								<button class="btn btn-icon btn-outline btn-active-color-primary" type="button" data-kt-dialer-control="increase" >
									<i class="ki-duotone ki-plus fs-2"></i>
								</button>

								<!--end::Increase control-->
							</div>
								<!--end::Dialer-->

							</div>



						</div>


						<!--end::Station Stop Duration-->
						<!--begin::Include Long Break-->
						<div class=" p-5 d-flex flex-column ">


							<div class=" ">



								<div class="form-check form-check-custom form-check-solid me-10 form-check-sm ">
									<input asp-for="MainTripHasBreak" class="form-check-input  long-break-checkbox "
										   data-url="/Routes/GetRouteStationsJsonAsync1?routeId="
										   type="checkbox" id="main">
									<label class="form-check-labe text-gray-800  fs-5 fw-normal ms-2" for="main">
										Include Long Break

									</label>
								</div>


							</div>





							@* <div class="ps-13 mt-7 " id="break_details">
							</div> *@



						</div>

						<!--end::Include Long Break-->



						<div id="main-trip-break-container" class="d-flex flex-column   ms-10 align-self-start">
						</div>




					</div>
					<!-- --MainTrip end -->


					<div class="mx-2 align-self-start mt-18">

						<i class="ki-solid ki-arrow-right-left  text-dark-300 fs-2tx m-0 p-0  "></i>





					</div>

					<!-- --ReturnTrip start -->
					<div>

						@{
							var returnTripBulletColor = Model.ReturnTripId is null ? "danger" : "success";

						}

						<div class="d-flex">
							<span class="text-gray-900 fw-bold ms-4 fs-5">Return Trip</span>
							<span class="bullet   bullet-dot  bg-@returnTripBulletColor ms-2 mt-3"></span>

						</div>
						<div class="d-flex align-items-center justify-content-center m-4">

							<label asp-for="ReturnTripNewTime" class="form-label me-2" style="white-space: nowrap;">Time :</label>
							<input asp-for="ReturnTripNewTime" class="form-control form-control-solid form-control-sm flatpickr-input flatpicker-time" 
							value="@(Model.ReturnTripOldDateTime!=null?Model.ReturnTripOldDateTime.Value.TimeOfDay:"")" placeholder="Pick time" id="reverse-trip-time" type="text">
							<span asp-validation-for="ReturnTripNewTime" class="text-danger ms-2"></span>

						</div>

						<div class="d-flex align-items-center justify-content-center m-4">

							<label asp-for="ReturnTripNewDate" class="form-label me-2" style="white-space: nowrap;">Date :</label>
							<input asp-for="ReturnTripNewDate" class="form-control form-control-solid form-control-sm flatpickr-input flatpicker-date"
								   value="@(Model.ReturnTripOldDateTime!=null?Model.ReturnTripOldDateTime.Value.ToString("yyyy-MM-dd"):"")" placeholder="Pick Date" id="reverse-trip-time" type="text">
							<span asp-validation-for="ReturnTripNewDate" class="text-danger ms-2"></span>

						</div>



						<!--begin::Station Stop Duration-->
						<div class="d-flex align-items-center m-4 mt-7 ">


							<span class="text-gray-800 fs-5 fw-normal  mb-1 ">Station Stop Duration :</span>



							
							<input id="return-trip-stop-munites-hidden-input" type="hidden" asp-for="ReturnTripStationStopMinutes"
								   value="@Model.ReturnTripStationStopMinutes" />
							@*<input type="hidden" asp-for="BreakMinutes" id="Hidden_Break_Minutes" /> *@


							<div class="m-4 mt-0 d-flex">
								<!--begin::Dialer-->
								<div id="" class="input-group w-md-200px"
									 data-kt-dialer="true"
									 data-kt-dialer-max="20"
									 data-kt-dialer-min="5"
									 data-kt-dialer-suffix=" Minutes"
									 data-kt-dialer-step="5">

								<!--begin::Decrease control-->
								<button class="btn btn-icon btn-outline btn-active-color-primary" type="button" data-kt-dialer-control="decrease" >
									<i class="ki-duotone ki-minus fs-2"></i>
								</button>
								<!--end::Decrease control-->
								<!--begin::Input control-->

									<input asp-for="ReturnTripStationStopMinutes" id="return-trip-stop-munites" value="@(Model.ReturnTripStationStopMinutes !=0 ? Model.ReturnTripStationStopMinutes:5)"
										   type="text" class="form-control dialer-input" placeholder="Minutes" data-kt-dialer-control="input" />
								<!--end::Input control-->
								<!--begin::Increase control-->
								<button class="btn btn-icon btn-outline btn-active-color-primary" type="button" data-kt-dialer-control="increase" >
									<i class="ki-duotone ki-plus fs-2"></i>
								</button>

								<!--end::Increase control-->
							</div>
								<!--end::Dialer-->

							</div>



						</div>



						<!--end::Station Stop Duration-->
						<!--begin::Include Long Break-->
						<div class=" p-5 d-flex flex-column ">


							<div class=" ">



								<div class="form-check form-check-custom form-check-solid me-10 form-check-sm ">
									<input asp-for="ReturnTripHasBreak" class="form-check-input  long-break-checkbox "
										   data-url="/Routes/GetRouteStationsJsonAsync1?routeId="
										   type="checkbox" id="return">
									<label class="form-check-labe text-gray-800  fs-5 fw-normal ms-2" for="return">
										Include Long Break

									</label>
								</div>


							</div>





							@* <div class="ps-13 mt-7 " id="break_details">
							</div> *@



						</div>

						<!--end::Include Long Break-->



						<div id="return-trip-break-container" class="d-flex flex-column  ms-10  align-self-end">
						</div>







					</div>
					<!-- --ReturnTrip end -->
				</div>

			
			


				<div class="d-flex justify-content-end py-6 px-9">
					<button type="submit" class="btn btn-primary btn-sm ">Submit</button>
				</div>


			</form>

		</div>


	</div>



</div>

<template id="main-trip-break-template">

	<input id="main-selected-station" type="hidden" value="@(Model.MainTripStationOrderNextToBreak==null?"":Model.MainTripStationOrderNextToBreak)" />
	<input id="main-break-minutes-hidden-input" type="hidden" asp-for="MainTripBreakMinutes"
		   value="@Model.MainTripBreakMinutes" />


	<div class="d-flex align-items-center gap-7 ">

		<span class="text-gray-800 fs-5 fw-normal  mb-1">Break Dureation : </span>

		<div class="m-4 ms-0 mt-0 d-flex">
			<!--begin::Dialer-->
			<div class="input-group w-md-200px" id=""
				 data-kt-dialer="true"
				 data-kt-dialer-max="40"
				 data-kt-dialer-min="5"
				 data-kt-dialer-step="5"
				 data-kt-dialer-suffix=" Minutes">

				<!--begin::Decrease control-->
				<button class="btn btn-icon btn-outline btn-active-color-primary" type="button" data-kt-dialer-control="decrease">
					<i class="ki-duotone ki-minus fs-2"></i>
				</button>
				<!--end::Decrease control-->
				<!--begin::Input control-->
				<input id="main-break-minutes" type="text" class="form-control dialer-input" readonly placeholder="Minutes"
					   value="@(Model.MainTripBreakMinutes!=null? Model.MainTripBreakMinutes : 30)" data-kt-dialer-control="input" />
				<!--end::Input control-->
				<!--begin::Increase control-->
				<button class="btn btn-icon btn-outline btn-active-color-primary" type="button" data-kt-dialer-control="increase">
					<i class="ki-duotone ki-plus fs-2"></i>
				</button>
				<!--end::Increase control-->
			</div>
			<!--end::Dialer-->

		</div>




	</div>

	<div class="d-flex align-items-center gap-5">

		<span class="text-gray-800 fs-5 fw-normal  mb-1">Break starts after :</span>

		<div class="w-200px">
			<select asp-for="MainTripStationOrderNextToBreak" id="main-select-station" class="form-select  form-select-sm  " data-control="select2" data-placeholder="Select an option">
				<option></option>
			</select>

		</div>

	</div>

</template>

<template id="return-trip-break-template">

	<input id="return-selected-station" type="hidden" value="@(Model.ReturnTripStationOrderNextToBreak==null?"":Model.ReturnTripStationOrderNextToBreak)" />
	<input id="return-break-minutes-hidden-input" type="hidden" asp-for="ReturnTripBreakMinutes"
		   value="@Model.ReturnTripBreakMinutes" />


	<div class="d-flex align-items-center gap-7 ">

		<span class="text-gray-800 fs-5 fw-normal  mb-1">Break Dureation : </span>

		<div class="m-4 ms-0 mt-0 d-flex">
			<!--begin::Dialer-->
			<div class="input-group w-md-200px" id=""
				 data-kt-dialer="true"
				 data-kt-dialer-max="40"
				 data-kt-dialer-min="5"
				 data-kt-dialer-step="5"
				 data-kt-dialer-suffix=" Minutes">

				<!--begin::Decrease control-->
				<button class="btn btn-icon btn-outline btn-active-color-primary" type="button" data-kt-dialer-control="decrease">
					<i class="ki-duotone ki-minus fs-2"></i>
				</button>
				<!--end::Decrease control-->
				<!--begin::Input control-->
				<input id="return-break-minutes" type="text" class="form-control dialer-input" readonly placeholder="Minutes"
					   value="@(Model.ReturnTripBreakMinutes!=null? Model.ReturnTripBreakMinutes : 30)" data-kt-dialer-control="input" />
				<!--end::Input control-->
				<!--begin::Increase control-->
				<button class="btn btn-icon btn-outline btn-active-color-primary" type="button" data-kt-dialer-control="increase">
					<i class="ki-duotone ki-plus fs-2"></i>
				</button>
				<!--end::Increase control-->
			</div>
			<!--end::Dialer-->

		</div>




	</div>

	<div class="d-flex align-items-center gap-5">

		<span class="text-gray-800 fs-5 fw-normal  mb-1">Break starts after :</span>

		<div class="w-200px">
			<select asp-for="ReturnTripStationOrderNextToBreak" id="return-select-station" class="form-select  form-select-sm  " data-control="select2" data-placeholder="Select an option">
				<option></option>
			</select>

		</div>

	</div>


</template>